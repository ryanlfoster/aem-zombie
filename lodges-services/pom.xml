<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.nationalgeographic.sites.travel</groupId>
        <artifactId>lodges-parent</artifactId>
        <version>1.0.0-local</version>
    </parent>

    <artifactId>lodges-services</artifactId>
    <packaging>bundle</packaging>

    <name>${project.groupId} - ${project.artifactId}</name>

    <description>
        An OSGi Bundle containing all of the backend CQ service implementations for the 'Travel Lodges website' project.

        During development, this bundle can be automatically deployed to your CQ instance by activating the
        "auto-deploy" profile and running the Maven "install" lifecycle phase (e.g. "mvn -Pauto-deploy install"). This
        can also be done from within most IDEs like Eclipse.
    </description>

    <dependencies>
    <dependency>
      <groupId>com.squeakysand.osgi</groupId>
      <artifactId>squeakysand-osgi</artifactId>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.scr.annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>biz.aQute</groupId>
      <artifactId>bndlib</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.jcr.api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.commons.json</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq.wcm</groupId>
      <artifactId>cq-wcm-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq.dam</groupId>
      <artifactId>cq-dam-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq</groupId>
      <artifactId>cq-commons</artifactId>
    </dependency>
  <dependency>
    <groupId>com.day.cq.wcm</groupId>
    <artifactId>cq-wcm-commons</artifactId>
  </dependency>
  <dependency>
    <groupId>com.day.commons</groupId>
    <artifactId>day-commons-gfx</artifactId>
  </dependency>
    <dependency>
      <groupId>com.day.cq.dam</groupId>
      <artifactId>cq-dam-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq.wcm</groupId>
      <artifactId>cq-wcm-foundation</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq.wcm</groupId>
      <artifactId>cq-wcm-workflow</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq.workflow</groupId>
      <artifactId>cq-workflow-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq.wcm</groupId>
      <artifactId>cq-wcm-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.day.cq</groupId>
      <artifactId>cq-tagging</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.sling</groupId>
      <artifactId>org.apache.sling.adapter</artifactId>
    </dependency>
    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
    </dependency>
    <dependency>
      <groupId>${dependency.platform.groupId}</groupId>
      <artifactId>platform-services</artifactId>
      <version>${dependency.platform.version}</version>      
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${dependency.platform.groupId}</groupId>
      <artifactId>platform-componentry</artifactId>
      <version>${dependency.platform.version}</version>
      <scope>provided</scope>
    </dependency>
  <dependency>
    <groupId>org.codehaus.jackson</groupId>
    <artifactId>jackson-mapper-asl</artifactId>
    <version>1.9.13</version>
  </dependency>   
  <dependency>
    <groupId>org.jscience</groupId>
    <artifactId>jscience</artifactId>
    <version>4.3.1</version>
  </dependency>  
     <dependency>
        <groupId>com.day.commons.osgi.wrapper</groupId>
        <artifactId>com.day.commons.osgi.wrapper.joda-time</artifactId>
    </dependency>      
    <dependency>
        <groupId>com.day.commons.osgi.wrapper</groupId>
        <artifactId>com.day.commons.osgi.wrapper.commons-httpclient</artifactId>
    </dependency>
  <dependency>
    <groupId>com.google.code</groupId>
    <artifactId>sitemapgen4j</artifactId>
    <version>1.0.1</version>
  </dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.0</version>
		</dependency>  
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-Activator>com.nationalgeographic.sites.travel.lodges.services.osgi.Activator</Bundle-Activator>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-scr-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
          <id>check-static</id>
          <build>
            <plugins>
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <executions>
                  <execution>
                    <id>validate</id>
                    <phase>validate</phase>
                    <goals>
                      <goal>check</goal>
                      <goal>cpd-check</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>
              <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <executions>
                  <execution>
                    <id>validate</id>
                    <phase>validate</phase>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>
              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                  <execution>
                    <id>validate</id>
                    <phase>validate</phase>
                    <goals>
                      <goal>check</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>
            </plugins>
          </build>
        </profile>
        <profile>
          <id>check-coverage</id>
          <build>
            <plugins>
              <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                  <execution>
                    <id>default-prepare-agent</id>
                    <goals>
                      <goal>prepare-agent</goal>
                    </goals>
                  </execution>
                  <execution>
                    <id>default-report</id>
                    <phase>test</phase>
                    <goals>
                      <goal>report</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>
            </plugins>
          </build>
        </profile>        
        <profile>
            <id>auto-deploy</id>
            <build>
                <plugins>
                    <!--
                        Use the sling plugin to automatically deploy the bundle to the JCR tree
                    -->
                    <plugin>
                        <groupId>org.apache.sling</groupId>
                        <artifactId>maven-sling-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>install-bundle</id>
                                <goals>
                                    <goal>install</goal>
                                </goals>
                                <configuration>
                                    <slingUrl>http://${cq.host}:${cq.port}</slingUrl>
                                    <!-- 
                                        IMPORTANT: due to an issue with the 2.1.0 version of the maven-sling-plugin, the path specified by the slingUrlSuffix
                                        parameter below will not be created automatically and so must already exist in your CQ instance BEFORE trying to use the
                                        auto-deploy profile. See this link for further information:
                                        http://mail-archives.apache.org/mod_mbox/sling-users/201204.mbox/%3CBD6ED82C-3223-41C2-BF15-C987D7AAFCE3@craigsdickson.com%3E
                                    -->
                                    <slingUrlSuffix>/system/console/install</slingUrlSuffix>
                                    <user>${cq.user}</user>
                                    <password>${cq.password}</password>
                                    <usePut>false</usePut>
                                    <failOnError>true</failOnError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
